--- a/configure.ac
+++ b/configure.ac
@@ -19,6 +19,7 @@ dnl
 dnl  You should have received a copy of the GNU General Public License
 dnl  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 AC_INIT([elfutils],[0.188],[https://sourceware.org/bugzilla],[elfutils],[http://elfutils.org/])
+AC_PREREQ([2.64])
 
 dnl Workaround for older autoconf < 2.64
 m4_ifndef([AC_PACKAGE_URL],
@@ -43,7 +44,7 @@ elif test "x$program_prefix" = "x"; then
 fi
 
 AC_CONFIG_AUX_DIR([config])
-AC_CONFIG_FILES([config/Makefile])
+AC_CONFIG_FILES([config/Makefile libgnu/Makefile])
 
 AC_COPYRIGHT([Copyright (C) 1996-2022 The elfutils developers.])
 AC_PREREQ(2.63)			dnl Minimum Autoconf version required.
@@ -89,6 +90,8 @@ AS_IF([test "$use_locks" = yes],
 AH_TEMPLATE([USE_LOCKS], [Defined if libraries should be thread-safe.])
 
 m4_version_prereq([2.70], [AC_PROG_CC], [AC_PROG_CC_C99])
+gl_EARLY
+gl_INIT
 AC_PROG_CXX
 AC_PROG_RANLIB
 AC_PROG_YACC
@@ -172,7 +175,6 @@ AC_CACHE_CHECK([whether the compiler gen
 AC_LINK_IFELSE([AC_LANG_PROGRAM()],[ac_cv_buildid=yes; $READELF -n conftest$EXEEXT | grep -q NT_GNU_BUILD_ID || ac_cv_buildid=no],AC_MSG_FAILURE([unexpected compile failure]))])
 if test "$ac_cv_buildid" = "no"; then
 	AC_MSG_WARN([compiler doesn't generate build-id by default])
-	LDFLAGS="$LDFLAGS -Wl,--build-id"
 fi
 
 ZRELRO_LDFLAGS="-Wl,-z,relro"
@@ -570,36 +572,6 @@ CFLAGS="$old_CFLAGS"])
 AM_CONDITIONAL(HAVE_NO_PACKED_NOT_ALIGNED_WARNING,
 	       [test "x$ac_cv_no_packed_not_aligned" != "xno"])
 
-saved_LIBS="$LIBS"
-AC_SEARCH_LIBS([argp_parse], [argp])
-LIBS="$saved_LIBS"
-case "$ac_cv_search_argp_parse" in
-        no) AC_MSG_FAILURE([failed to find argp_parse]) ;;
-        -l*) argp_LDADD="$ac_cv_search_argp_parse" ;;
-        *) argp_LDADD= ;;
-esac
-AC_SUBST([argp_LDADD])
-
-saved_LIBS="$LIBS"
-AC_SEARCH_LIBS([fts_close], [fts])
-LIBS="$saved_LIBS"
-case "$ac_cv_search_fts_close" in
-        no) AC_MSG_FAILURE([failed to find fts_close]) ;;
-        -l*) fts_LIBS="$ac_cv_search_fts_close" ;;
-        *) fts_LIBS= ;;
-esac
-AC_SUBST([fts_LIBS])
-
-saved_LIBS="$LIBS"
-AC_SEARCH_LIBS([_obstack_free], [obstack])
-LIBS="$saved_LIBS"
-case "$ac_cv_search__obstack_free" in
-        no) AC_MSG_FAILURE([failed to find _obstack_free]) ;;
-        -l*) obstack_LIBS="$ac_cv_search__obstack_free" ;;
-        *) obstack_LIBS= ;;
-esac
-AC_SUBST([obstack_LIBS])
-
 dnl The directories with content.
 
 dnl Documentation.
--- a/Makefile.am
+++ b/Makefile.am
@@ -26,8 +26,7 @@ AM_MAKEFLAGS = --no-print-directory
 
 pkginclude_HEADERS = version.h
 
-SUBDIRS = config lib libelf libcpu backends libebl libdwelf libdwfl libdw \
-	  libasm debuginfod src po doc tests
+SUBDIRS = libgnu config lib libelf libcpu backends libebl libdwelf libdwfl libdw
 
 EXTRA_DIST = elfutils.spec GPG-KEY NOTES CONTRIBUTING \
 	     COPYING COPYING-GPLV2 COPYING-LGPLV3
--- a/libelf/elf_update.c
+++ b/libelf/elf_update.c
@@ -38,6 +38,32 @@
 #include "libelfP.h"
 
 
+#ifdef __APPLE__
+static int posix_fallocate(int fd, off_t offset, off_t len)
+{
+     off_t c_test;
+     int ret;
+     if (!__builtin_saddll_overflow(offset, len, &c_test)) {
+         fstore_t store = {F_ALLOCATECONTIG, F_PEOFPOSMODE, 0, offset + len, 0};
+         // Try to get a continuous chunk of disk space
+         ret = fcntl(fd, F_PREALLOCATE, &store);
+         if (ret < 0) {
+             // OK, perhaps we are too fragmented, allocate non-continuous
+             store.fst_flags = F_ALLOCATEALL;
+             ret = fcntl(fd, F_PREALLOCATE, &store);
+             if (ret < 0) {
+                 return ret;
+             }
+         }
+         ret = ftruncate(fd, offset + len);
+     } else {
+         // offset+len would overflow.
+         ret = -1;
+     }
+     return ret;
+}
+#endif
+
 static int64_t
 write_file (Elf *elf, int64_t size, int change_bo, size_t shnum)
 {
--- a/lib/eu-config.h
+++ b/lib/eu-config.h
@@ -58,8 +58,12 @@
 #define _(Str) dgettext ("elfutils", Str)
 
 /* Compiler-specific definitions.  */
+#ifdef __APPLE__
+#define strong_alias(name, aliasname)
+#else
 #define strong_alias(name, aliasname) \
   extern __typeof (name) aliasname __attribute__ ((alias (#name)));
+#endif
 
 #ifdef __i386__
 # define internal_function __attribute__ ((regparm (3), stdcall))
@@ -159,7 +163,7 @@ asm (".section predict_data, \"aw\"; .pr
 #endif
 
 /* Avoid PLT entries.  */
-#ifdef PIC
+#if defined(PIC) && !defined(__APPLE__)
 # define INTUSE(name) _INTUSE(name)
 # define _INTUSE(name) __##name##_internal
 # define INTDEF(name) _INTDEF(name)
--- a/config/eu.am
+++ b/config/eu.am
@@ -30,7 +30,7 @@
 ##
 
 DEFS = -D_GNU_SOURCE -DHAVE_CONFIG_H -DLOCALEDIR='"${localedir}"'
-AM_CPPFLAGS = -I. -I$(srcdir) -I$(top_srcdir)/lib -I..
+AM_CPPFLAGS = -I$(top_builddir)/libgnu -I$(top_srcdir)/libgnu -I. -I$(srcdir) -I$(top_srcdir)/lib -I..
 
 # Drop the 'u' flag that automake adds by default. It is incompatible
 # with deterministic archives.
--- a/libelf/Makefile.am
+++ b/libelf/Makefile.am
@@ -35,8 +35,6 @@ endif
 VERSION = 1
 
 lib_LIBRARIES = libelf.a
-noinst_LIBRARIES = libelf_pic.a
-noinst_DATA = $(noinst_LIBRARIES:_pic.a=.so)
 include_HEADERS = libelf.h gelf.h nlist.h
 
 noinst_HEADERS = abstract.h common.h exttypes.h gelf_xlate.h libelfP.h \
@@ -102,36 +100,7 @@ libelf_a_SOURCES = elf_version.c elf_has
 		   elf32_getchdr.c elf64_getchdr.c gelf_getchdr.c \
 		   elf_compress.c elf_compress_gnu.c
 
-libelf_pic_a_SOURCES =
-am_libelf_pic_a_OBJECTS = $(libelf_a_SOURCES:.c=.os)
-
-libelf_so_DEPS = ../lib/libeu.a
-libelf_so_LDLIBS = $(libelf_so_DEPS) -lz
-if USE_LOCKS
-libelf_so_LDLIBS += -lpthread
-endif
-
-libelf_so_LIBS = libelf_pic.a
-libelf.so: $(srcdir)/libelf.map $(libelf_so_LIBS) $(libelf_so_DEPS)
-	$(AM_V_CCLD)$(LINK) $(dso_LDFLAGS) -o $@ \
-		-Wl,--soname,$@.$(VERSION) \
-		-Wl,--version-script,$<,--no-undefined \
-		-Wl,--whole-archive $(libelf_so_LIBS) -Wl,--no-whole-archive \
-		$(libelf_so_LDLIBS)
-	@$(textrel_check)
-	$(AM_V_at)ln -fs $@ $@.$(VERSION)
-
-install: install-am libelf.so
+install: install-am
 	$(mkinstalldirs) $(DESTDIR)$(libdir)
-	$(INSTALL_PROGRAM) libelf.so $(DESTDIR)$(libdir)/libelf-$(PACKAGE_VERSION).so
-	ln -fs libelf-$(PACKAGE_VERSION).so $(DESTDIR)$(libdir)/libelf.so.$(VERSION)
-	ln -fs libelf.so.$(VERSION) $(DESTDIR)$(libdir)/libelf.so
 
 uninstall: uninstall-am
-	rm -f $(DESTDIR)$(libdir)/libelf-$(PACKAGE_VERSION).so
-	rm -f $(DESTDIR)$(libdir)/libelf.so.$(VERSION)
-	rm -f $(DESTDIR)$(libdir)/libelf.so
-
-EXTRA_DIST = libelf.map
-
-CLEANFILES += $(am_libelf_pic_a_OBJECTS) libelf.so libelf.so.$(VERSION)
--- a/libcpu/i386_data.h
+++ b/libcpu/i386_data.h
@@ -1127,10 +1127,10 @@ FCT_mod$16r_m (struct output_data *d)
 }
 
 
-#ifdef X86_64
 static int
 FCT_mod$64r_m (struct output_data *d)
 {
+#ifdef X86_64
   assert (d->opoff1 % 8 == 0);
   uint_fast8_t modrm = d->data[d->opoff1 / 8];
   if ((modrm & 0xc0) == 0xc0)
@@ -1151,10 +1151,10 @@ FCT_mod$64r_m (struct output_data *d)
     }
 
   return general_mod$r_m (d);
-}
 #else
-static typeof (FCT_mod$r_m) FCT_mod$64r_m __attribute__ ((alias ("FCT_mod$r_m")));
+  return FCT_mod$r_m(d);
 #endif
+}
 
 
 static int
--- a/backends/i386_auxv.c
+++ b/backends/i386_auxv.c
@@ -48,5 +48,4 @@ EBLHOOK(auxv_info) (GElf_Xword a_type, c
   return 1;
 }
 
-__typeof (i386_auxv_info) x86_64_auxv_info
-			  __attribute__ ((alias ("i386_auxv_info")));
+auxv_info_alias(x86_64)
--- a/backends/ppc_regs.c
+++ b/backends/ppc_regs.c
@@ -204,5 +204,11 @@ ppc_register_info (Ebl *ebl __attribute_
   return namelen;
 }
 
-__typeof (ppc_register_info)
-     ppc64_register_info __attribute__ ((alias ("ppc_register_info")));
+ssize_t
+ppc64_register_info (Ebl *ebl,
+		     int regno, char *name, size_t namelen,
+		     const char **prefix, const char **setname,
+		     int *bits, int *type)
+{
+  return ppc_register_info(ebl, regno, name, namelen, prefix, setname, bits, type);
+}
--- a/backends/libebl_CPU.h
+++ b/backends/libebl_CPU.h
@@ -72,4 +72,10 @@ dwarf_peeled_die_type (Dwarf_Die *die, D
   return DWARF_TAG_OR_RETURN (result);
 }
 
+#define auxv_info_alias(arch) \
+	int EBLHOOK_1(arch, auxv_info) (GElf_Xword a_type, const char **name, const char **format) \
+	{ \
+		return EBLHOOK(auxv_info)(a_type, name, format); \
+	}
+
 #endif	/* libebl_CPU.h */
--- a/backends/ppc_auxv.c
+++ b/backends/ppc_auxv.c
@@ -51,5 +51,4 @@ EBLHOOK(auxv_info) (GElf_Xword a_type, c
   return 1;
 }
 
-__typeof (ppc_auxv_info) ppc64_auxv_info
-			 __attribute__ ((alias ("ppc_auxv_info")));
+auxv_info_alias(ppc64)
--- a/backends/ppc_cfi.c
+++ b/backends/ppc_cfi.c
@@ -72,6 +72,7 @@ ppc_abi_cfi (Ebl *ebl __attribute__ ((un
   return 0;
 }
 
-__typeof (ppc_abi_cfi)
-     ppc64_abi_cfi
-     __attribute__ ((alias ("ppc_abi_cfi")));
+int ppc64_abi_cfi(Ebl *ebl, Dwarf_CIE *abi_info)
+{
+  return ppc_abi_cfi(ebl, abi_info);
+}
--- a/backends/ppc_initreg.c
+++ b/backends/ppc_initreg.c
@@ -68,9 +68,10 @@ ppc_dwarf_to_regno (Ebl *ebl __attribute
   abort ();
 }
 
-__typeof (ppc_dwarf_to_regno)
-     ppc64_dwarf_to_regno
-     __attribute__ ((alias ("ppc_dwarf_to_regno")));
+bool ppc64_dwarf_to_regno (Ebl *ebl, unsigned *regno)
+{
+  return ppc_dwarf_to_regno(ebl, regno);
+}
 
 bool
 ppc_set_initial_registers_tid (pid_t tid __attribute__ ((unused)),
@@ -127,6 +128,7 @@ ppc_set_initial_registers_tid (pid_t tid
 #endif /* __powerpc__ */
 }
 
-__typeof (ppc_set_initial_registers_tid)
-     ppc64_set_initial_registers_tid
-     __attribute__ ((alias ("ppc_set_initial_registers_tid")));
+bool ppc64_set_initial_registers_tid(pid_t tid, ebl_tid_registers_t *setfunc, void *arg)
+{
+  return ppc_set_initial_registers_tid(tid, setfunc, arg);
+}
--- a/backends/ppc_attrs.c
+++ b/backends/ppc_attrs.c
@@ -81,6 +81,9 @@ ppc_check_object_attribute (Ebl *ebl __a
   return false;
 }
 
-__typeof (ppc_check_object_attribute)
-     ppc64_check_object_attribute
-     __attribute__ ((alias ("ppc_check_object_attribute")));
+bool ppc64_check_object_attribute(Ebl *ebl,
+				  const char *vendor, int tag, uint64_t value,
+				  const char **tag_name, const char **value_name)
+{
+  return ppc_check_object_attribute(ebl, vendor, tag, value, tag_name, value_name);
+}
--- a/lib/libeu.h
+++ b/lib/libeu.h
@@ -45,4 +45,11 @@ extern char *xasprintf(const char *fmt,
 extern uint32_t crc32 (uint32_t crc, unsigned char *buf, size_t len);
 extern int crc32_file (int fd, uint32_t *resp);
 
+#ifdef __APPLE__
+static inline void tdestroy(void *root __attribute__ ((unused)),
+			    void (*freekey)(void *) __attribute__ ((unused)))
+{
+}
+#endif
+
 #endif
--- a/libdwfl/libdwflP.h
+++ b/libdwfl/libdwflP.h
@@ -31,6 +31,8 @@
 
 #include <libdwfl.h>
 #include <libebl.h>
+#include <libeu.h>
+#include <libgen.h>
 #include <assert.h>
 #include <dirent.h>
 #include <errno.h>
--- /dev/null
+++ b/lib/stdio_ext.h
@@ -0,0 +1,6 @@
+#include <stdio.h>
+#ifndef __APPLE__
+#include_next <stdio_ext.h>
+#else
+#define __fsetlocking(...) 0
+#endif
--- a/libdw/libdwP.h
+++ b/libdw/libdwP.h
@@ -32,8 +32,10 @@
 #include <stdbool.h>
 #include <pthread.h>
 
+#include <libeu.h>
 #include <libdw.h>
 #include <dwarf.h>
+#include <libgen.h>
 
 
 /* Known location expressions already decoded.  */
--- a/libdw/Makefile.am
+++ b/libdw/Makefile.am
@@ -35,8 +35,6 @@ AM_CPPFLAGS += -I$(srcdir)/../libelf -I$
 VERSION = 1
 
 lib_LIBRARIES = libdw.a
-noinst_LIBRARIES = libdw_pic.a
-noinst_DATA = $(noinst_LIBRARIES:_pic.a=.so)
 
 include_HEADERS = dwarf.h
 pkginclude_HEADERS = libdw.h known-dwarf.h
@@ -103,48 +101,19 @@ $(srcdir)/known-dwarf.h: $(top_srcdir)/c
 	mv -f $@.new $@
 endif
 
-libdw_pic_a_SOURCES =
-am_libdw_pic_a_OBJECTS = $(libdw_a_SOURCES:.c=.os)
-
-libdw_so_LIBS = ../libebl/libebl_pic.a ../backends/libebl_backends_pic.a \
-		../libcpu/libcpu_pic.a libdw_pic.a ../libdwelf/libdwelf_pic.a \
-		../libdwfl/libdwfl_pic.a
-libdw_so_DEPS = ../lib/libeu.a ../libelf/libelf.so
-libdw_so_LDLIBS = $(libdw_so_DEPS) -ldl -lz $(argp_LDADD) $(fts_LIBS) $(obstack_LIBS) $(zip_LIBS) -pthread
-libdw.so: $(srcdir)/libdw.map $(libdw_so_LIBS) $(libdw_so_DEPS)
-	$(AM_V_CCLD)$(LINK) $(dso_LDFLAGS) -o $@ \
-		-Wl,--soname,$@.$(VERSION),--enable-new-dtags \
-		-Wl,--version-script,$<,--no-undefined \
-		-Wl,--whole-archive $(libdw_so_LIBS) -Wl,--no-whole-archive \
-		$(libdw_so_LDLIBS)
-	@$(textrel_check)
-	$(AM_V_at)ln -fs $@ $@.$(VERSION)
-
-install: install-am libdw.so
-	$(mkinstalldirs) $(DESTDIR)$(libdir)
-	$(INSTALL_PROGRAM) libdw.so $(DESTDIR)$(libdir)/libdw-$(PACKAGE_VERSION).so
-	ln -fs libdw-$(PACKAGE_VERSION).so $(DESTDIR)$(libdir)/libdw.so.$(VERSION)
-	ln -fs libdw.so.$(VERSION) $(DESTDIR)$(libdir)/libdw.so
-
-uninstall: uninstall-am
-	rm -f $(DESTDIR)$(libdir)/libdw-$(PACKAGE_VERSION).so
-	rm -f $(DESTDIR)$(libdir)/libdw.so.$(VERSION)
-	rm -f $(DESTDIR)$(libdir)/libdw.so
-	rmdir --ignore-fail-on-non-empty $(DESTDIR)$(includedir)/elfutils
-
-libdwfl_objects = $(shell $(AR) t ../libdwfl/libdwfl.a)
+libdwfl_objects = $(shell $(AR) t ../libdwfl/libdwfl.a | grep -v SYMDEF)
 libdw_a_LIBADD = $(addprefix ../libdwfl/,$(libdwfl_objects))
 
-libdwelf_objects = $(shell $(AR) t ../libdwelf/libdwelf.a)
+libdwelf_objects = $(shell $(AR) t ../libdwelf/libdwelf.a | grep -v SYMDEF)
 libdw_a_LIBADD += $(addprefix ../libdwelf/,$(libdwelf_objects))
 
-libebl_objects = $(shell $(AR) t ../libebl/libebl.a)
+libebl_objects = $(shell $(AR) t ../libebl/libebl.a | grep -v SYMDEF)
 libdw_a_LIBADD += $(addprefix ../libebl/,$(libebl_objects))
 
-backends_objects = $(shell $(AR) t ../backends/libebl_backends.a)
+backends_objects = $(shell $(AR) t ../backends/libebl_backends.a | grep -v SYMDEF)
 libdw_a_LIBADD += $(addprefix ../backends/,$(backends_objects))
 
-libcpu_objects = $(shell $(AR) t ../libcpu/libcpu.a)
+libcpu_objects = $(shell $(AR) t ../libcpu/libcpu.a | grep -v SYMDEF)
 libdw_a_LIBADD += $(addprefix ../libcpu/,$(libcpu_objects))
 
 noinst_HEADERS = libdwP.h memory-access.h dwarf_abbrev_hash.h \
--- a/libasm/Makefile.am
+++ b/libasm/Makefile.am
@@ -33,8 +33,6 @@ AM_CPPFLAGS += -I$(top_srcdir)/libelf -I
 VERSION = 1
 
 lib_LIBRARIES = libasm.a
-noinst_LIBRARIES = libasm_pic.a
-noinst_DATA = $(noinst_LIBRARIES:_pic.a=.so)
 pkginclude_HEADERS = libasm.h
 
 libasm_a_SOURCES = asm_begin.c asm_abort.c asm_end.c asm_error.c \
@@ -51,37 +49,6 @@ libasm_a_SOURCES = asm_begin.c asm_abort
 		   disasm_begin.c disasm_cb.c disasm_end.c disasm_str.c \
 		   symbolhash.c
 
-libasm_pic_a_SOURCES =
-am_libasm_pic_a_OBJECTS = $(libasm_a_SOURCES:.c=.os)
-
-libasm_so_DEPS = ../lib/libeu.a ../libebl/libebl_pic.a ../libelf/libelf.so ../libdw/libdw.so
-libasm_so_LDLIBS = $(libasm_so_DEPS)
-if USE_LOCKS
-libasm_so_LDLIBS += -lpthread
-endif
-
-libasm_so_LIBS = libasm_pic.a
-libasm.so: $(srcdir)/libasm.map $(libasm_so_LIBS) $(libasm_so_DEPS)
-	$(AM_V_CCLD)$(LINK) $(dso_LDFLAGS) -o $@ \
-		-Wl,--soname,$@.$(VERSION) \
-		-Wl,--version-script,$<,--no-undefined \
-		-Wl,--whole-archive $(libasm_so_LIBS) -Wl,--no-whole-archive \
-		$(libasm_so_LDLIBS)
-	@$(textrel_check)
-	$(AM_V_at)ln -fs $@ $@.$(VERSION)
-
-install: install-am libasm.so
-	$(mkinstalldirs) $(DESTDIR)$(libdir)
-	$(INSTALL_PROGRAM) libasm.so $(DESTDIR)$(libdir)/libasm-$(PACKAGE_VERSION).so
-	ln -fs libasm-$(PACKAGE_VERSION).so $(DESTDIR)$(libdir)/libasm.so.$(VERSION)
-	ln -fs libasm.so.$(VERSION) $(DESTDIR)$(libdir)/libasm.so
-
-uninstall: uninstall-am
-	rm -f $(DESTDIR)$(libdir)/libasm-$(PACKAGE_VERSION).so
-	rm -f $(DESTDIR)$(libdir)/libasm.so.$(VERSION)
-	rm -f $(DESTDIR)$(libdir)/libasm.so
-	rmdir --ignore-fail-on-non-empty $(DESTDIR)$(includedir)/elfutils
-
 noinst_HEADERS = libasmP.h symbolhash.h
 EXTRA_DIST = libasm.map
 
--- a/libdwfl/Makefile.am
+++ b/libdwfl/Makefile.am
@@ -82,9 +82,6 @@ if ZSTD
 libdwfl_a_SOURCES += zstd.c
 endif
 
-libdwfl = $(libdw)
-libdw = ../libdw/libdw.so
-libelf = ../libelf/libelf.so
 libebl = ../libebl/libebl.a
 libeu = ../lib/libeu.a
 
