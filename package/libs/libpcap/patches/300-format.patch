From 05068a794ad98c040c5556b5ec574b0b1cf482a6 Mon Sep 17 00:00:00 2001
From: Denis Ovsienko <denis@ovsienko.info>
Date: Sat, 31 Jul 2021 15:00:51 +0100
Subject: [PATCH] Address two truncation warnings in pcap_open_live().

These warnings have been around for a while in the REMOTE=yes space of
all Linux builds and OpenBSD/AMD64 build. Pass each of the offending
strings through a tailored buffer to satisfy GCC.

./pcap.c: In function 'pcap_open_live':
./pcap.c:2858:47: warning: '%.*s' directive output may be truncated
writing up to 250 bytes into a region of size between 249 and 252
[-Wformat-truncation=]
 2858 |   snprintf(errbuf, PCAP_ERRBUF_SIZE, "%s: %s (%.*s)", device,
      |                                               ^~~~
In file included from /usr/include/stdio.h:867,
                 from ./pcap.c:56:
/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note:
'__builtin___snprintf_chk' output 6 or more bytes (assuming 259) into a
destination of size 256

./pcap.c:2853:43: warning: '%.*s' directive output may be truncated
writing up to 253 bytes into a region of size between 251 and 254
[-Wformat-truncation=]
 2853 |   snprintf(errbuf, PCAP_ERRBUF_SIZE, "%s: %.*s", device,
      |                                           ^~~~
In file included from /usr/include/stdio.h:867,
                 from ./pcap.c:56:
/usr/include/x86_64-linux-gnu/bits/stdio2.h:67:10: note:
'__builtin___snprintf_chk' output 3 or more bytes (assuming 259) into a
destination of size 256
---
 pcap.c | 24 ++++++++++++++++++------
 1 file changed, 18 insertions(+), 6 deletions(-)

--- a/pcap.c
+++ b/pcap.c
@@ -2849,15 +2849,27 @@ pcap_open_live(const char *device, int s
 		goto fail;
 	return (p);
 fail:
-	if (status == PCAP_ERROR)
+	if (status == PCAP_ERROR) {
+		/*
+		 * Another buffer is a bit cumbersome, but it avoids -Wformat-truncation.
+		 */
+		char trimbuf[PCAP_ERRBUF_SIZE - 5]; /* 2 bytes shorter */
+
+		pcap_strlcpy(trimbuf, p->errbuf, sizeof(trimbuf));
 		snprintf(errbuf, PCAP_ERRBUF_SIZE, "%s: %.*s", device,
-		    PCAP_ERRBUF_SIZE - 3, p->errbuf);
-	else if (status == PCAP_ERROR_NO_SUCH_DEVICE ||
+		    PCAP_ERRBUF_SIZE - 3, trimbuf);
+	} else if (status == PCAP_ERROR_NO_SUCH_DEVICE ||
 	    status == PCAP_ERROR_PERM_DENIED ||
-	    status == PCAP_ERROR_PROMISC_PERM_DENIED)
+	    status == PCAP_ERROR_PROMISC_PERM_DENIED) {
+		/*
+		 * Idem.
+		 */
+		char trimbuf[PCAP_ERRBUF_SIZE - 8]; /* 2 bytes shorter */
+
+		pcap_strlcpy(trimbuf, p->errbuf, sizeof(trimbuf));
 		snprintf(errbuf, PCAP_ERRBUF_SIZE, "%s: %s (%.*s)", device,
-		    pcap_statustostr(status), PCAP_ERRBUF_SIZE - 6, p->errbuf);
-	else
+		    pcap_statustostr(status), PCAP_ERRBUF_SIZE - 6, trimbuf);
+	} else
 		snprintf(errbuf, PCAP_ERRBUF_SIZE, "%s: %s", device,
 		    pcap_statustostr(status));
 	pcap_close(p);
