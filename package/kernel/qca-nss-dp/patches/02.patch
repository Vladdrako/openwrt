From 9f22fdc1a396539d5b70483c0fe36f8b85f51862 Mon Sep 17 00:00:00 2001
From: BrainSlayer <s.gottschall@dd-wrt.com>
Date: Wed, 18 Jun 2025 16:39:30 +0000
Subject: [PATCH] add some checkpoints

git-svn-id: svn://svn.dd-wrt.com/DD-WRT@61814 52c4871e-980c-0410-b1e0-e73912ce01f8
---
 src/router/qca-nss/qca-nss-dp/nss_dp_attach.c |  1 +
 .../qca-nss/qca-nss-dp/nss_dp_main_alt.c      | 25 +++++++++++++++++++
 2 files changed, 26 insertions(+)

diff --git a/src/router/qca-nss/qca-nss-dp/nss_dp_attach.c b/src/router/qca-nss/qca-nss-dp/nss_dp_attach.c
index b104aad1afc1..92d0d76a36ec 100644
--- a/nss_dp_attach.c
+++ b/nss_dp_attach.c
@@ -26,6 +26,7 @@
  */
 static inline void nss_dp_reset_netdev_features(struct net_device *netdev)
 {
+	printk(KERN_INFO "%s->%s\n", __func__, netdev->name);
 	netdev->features = 0;
 	netdev->hw_features = 0;
 	netdev->vlan_features = 0;
diff --git a/src/router/qca-nss/qca-nss-dp/nss_dp_main_alt.c b/src/router/qca-nss/qca-nss-dp/nss_dp_main_alt.c
index a95267977574..2b508b80d599 100644
--- a/nss_dp_main.c
+++ b/nss_dp_main.c
@@ -140,6 +140,10 @@ module_param_array(nss_dp_pri_map, byte, NULL, S_IRUGO);
 MODULE_PARM_DESC(nss_dp_pri_map, "Priority to multi-queue mapping");
 #endif
 
+#if (LINUX_VERSION_CODE > KERNEL_VERSION(6, 6, 0))
+#define NSS_DP_GRE_CSUM_OFFSET 4
+#endif
+
 /*
  * nss_dp_do_ioctl()
  */
@@ -583,6 +587,27 @@ static netdev_features_t __attribute__((unused)) nss_dp_feature_check(struct sk_
 		features &= ~(NETIF_F_HW_CSUM | NETIF_F_TSO | NETIF_F_TSO6);
 	}
 #endif
+
+#if (LINUX_VERSION_CODE > KERNEL_VERSION(6, 6, 0))
+	/*
+	 * EDMA driver does not support custom checksum offload where
+	 * we need to calculate IP style checksum from skb->csum_start
+	 * to the end of the packet and update the offset skb->csum_offset.
+	 *
+	 * GRE CSUM offload feature was added to kernel 6.6 and since we
+	 * advertise that edma can support custom checksum offload (NETIF_F_HW_CSUM)
+	 * instead of just generic IPv4(NETIF_F_IP_CSUM) and IPv6(NETIF_F_IPV6_CSUM)
+	 * GRE module in linux does not calculate the checksum.
+	 * Disalbe checksum offload for GRE tunnels.
+	 *
+	 * TODO: Explore implementing custom tunnel checksum offload support in edma_tx.
+	 * EDMA hardware supports it.
+	 */
+	if (unlikely(skb->csum_offset == NSS_DP_GRE_CSUM_OFFSET)) {
+		features &= (~NETIF_F_HW_CSUM | NETIF_F_IP_CSUM | NETIF_F_IPV6_CSUM);
+	}
+#endif
+
 	return features;
 }
 
