diff --color -bur a/cryptodev_int.h b/cryptodev_int.h
--- a/cryptodev_int.h
+++ b/cryptodev_int.h
@@ -115,7 +115,7 @@
 int crypto_auth_run(struct fcrypt *fcr, struct kernel_crypt_auth_op *kcaop);
 int crypto_run(struct fcrypt *fcr, struct kernel_crypt_op *kcop);
 
-#include <cryptlib.h>
+#include "cryptlib.h"
 
 /* other internal structs */
 struct csession {
diff --color -bur a/ioctl.c b/ioctl.c
--- a/ioctl.c
+++ b/ioctl.c
@@ -829,7 +829,6 @@
 			"%s", crypto_tfm_alg_driver_name(tfm));
 }
 
-#if defined(QCANSS) || defined(QCA) || defined(MT7621) || defined(MT7622) || defined(LANTIQ) || defined(BCM675X) || defined(BCM49XX) || defined(MT798X)
 static unsigned int is_known_accelerated(struct crypto_tfm *tfm)
 {
 	const char *name = crypto_tfm_alg_driver_name(tfm);
@@ -838,31 +837,24 @@
 		return 0;
 
 	/* look for known crypto engine names */
-#if defined(QCANSS)
 	if (!strncmp(name, "nss-", 4))
 		return 1;
-#elif defined(QCA)
 	if (!strncmp(name, "qcrypto", 7))
 		return 1;
-#elif defined(MT7621)
+	if (!strncmp(name, "mv-", 3))
+		return 1;
 	if (strstr(name, "eip93"))
 		return 1;
-#elif defined(MT7622)
 	if (strstr(name, "mtk"))
 		return 1;
-#elif defined(MT798X)
 	if (strstr(name, "safexcel-"))
 		return 1;
-#elif defined(LANTIQ)
 	if (strstr(name, "ltq-crypto"))
 		return 1;
-#elif defined(BCM675X) || defined(BCM49XX)
 	if (strstr(name, "-iproc"))
 		return 1;
-#endif
 	return 0;
 }
-#endif
 
 static int get_session_info(struct fcrypt *fcr, struct session_info_op *siop)
 {
@@ -884,24 +876,14 @@
 		else
 			tfm = crypto_aead_tfm(ses_ptr->cdata.async.as);
 		tfm_info_to_alg_info(&siop->cipher_info, tfm);
-#if defined(QCANSS) || defined(QCA) || defined(MT7621) || defined(MT7622) || defined(LANTIQ) || defined(BCM675X) || defined(BCM49XX) || defined(MT798X)
 		if (is_known_accelerated(tfm))
 			siop->flags |= SIOP_FLAG_KERNEL_DRIVER_ONLY;
-#else
-		if (tfm->__crt_alg->cra_flags & CRYPTO_ALG_KERN_DRIVER_ONLY)
-			siop->flags |= SIOP_FLAG_KERNEL_DRIVER_ONLY;
-#endif
 	}
 	if (ses_ptr->hdata.init) {
 		tfm = crypto_ahash_tfm(ses_ptr->hdata.async.s);
 		tfm_info_to_alg_info(&siop->hash_info, tfm);
-#if defined(QCANSS) || defined(QCA) || defined(MT7621) || defined(MT7622) || defined(LANTIQ) || defined(BCM675X) || defined(BCM49XX) || defined(MT798X)
 		if (is_known_accelerated(tfm))
 			siop->flags |= SIOP_FLAG_KERNEL_DRIVER_ONLY;
-#else
-		if (tfm->__crt_alg->cra_flags & CRYPTO_ALG_KERN_DRIVER_ONLY)
-			siop->flags |= SIOP_FLAG_KERNEL_DRIVER_ONLY;
-#endif
 	}
 
 	siop->alignmask = ses_ptr->alignmask;
diff --color -bur a/main.c b/main.c
--- a/main.c
+++ b/main.c
@@ -168,12 +168,11 @@
 	struct crypt_op *cop = &kcop->cop;
 	int ret = 0;
 
-#if defined(QCANSS)
 //openssl bug!!!
 	if (unlikely(cop->src != cop->dst)) {
 		return __crypto_run_std(ses_ptr, cop);
 	}
-#endif
+
 	ret = get_userbuf(ses_ptr, cop->src, cop->len, cop->dst, cop->len,
 	                  kcop->task, kcop->mm, &src_sg, &dst_sg);
 	if (unlikely(ret)) {
