From 957e85b0927d086c05a4484a8a816c818ef14f89 Mon Sep 17 00:00:00 2001
From: Rosen Penev <rosenp@gmail.com>
Date: Sun, 19 Feb 2023 12:23:51 -0800
Subject: [PATCH] libubox: add support for newer Lua versions

Patch taken from Debian.

Signed-off-by: Rosen Penev <rosenp@gmail.com>
---
 lua/uloop.c | 26 +++++++++++++++++++++++---
 1 file changed, 23 insertions(+), 3 deletions(-)

diff --git a/lua/uloop.c b/lua/uloop.c
index 7a73f16..a945229 100644
--- a/lua/uloop.c
+++ b/lua/uloop.c
@@ -18,6 +18,8 @@
 #include <stdlib.h>
 #include <unistd.h>
 
+#define LUA_COMPAT_5_3 // for lua_strlen
+
 #include <lua.h>
 #include <lualib.h>
 #include <lauxlib.h>
@@ -53,6 +55,24 @@ struct lua_uloop_signal {
 
 static lua_State *state;
 
+#if !defined LUA_VERSION_NUM || LUA_VERSION_NUM==501
+/*
+** Adapted from Lua 5.2.0
+*/
+static void luaL_setfuncs (lua_State *L, const luaL_Reg *l, int nup) {
+	luaL_checkstack(L, nup+1, "too many upvalues");
+	for (; l->name != NULL; l++) {  /* fill the table with given functions */
+		int i;
+		lua_pushstring(L, l->name);
+		for (i = 0; i < nup; i++)  /* copy upvalues to the top */
+			lua_pushvalue(L, -(nup+1));
+		lua_pushcclosure(L, l->func, nup);  /* closure with those upvalues */
+		lua_settable(L, -(nup + 3));
+	}
+	lua_pop(L, nup);  /* remove upvalues */
+}
+#endif
+
 static void *
 ul_create_userdata(lua_State *L, size_t size, const luaL_Reg *reg, lua_CFunction gc)
 {
@@ -67,7 +87,7 @@ ul_create_userdata(lua_State *L, size_t size, const luaL_Reg *reg, lua_CFunction
 	lua_pushvalue(L, -1);
 	lua_setmetatable(L, -3);
 	lua_pushvalue(L, -2);
-	luaI_openlib(L, NULL, reg, 1);
+	luaL_setfuncs(L, reg, 1);
 	lua_pushvalue(L, -2);
 
 	return ret;
@@ -597,7 +617,7 @@ static int ul_end(lua_State *L)
 	return 1;
 }
 
-static luaL_reg uloop_func[] = {
+static luaL_Reg uloop_func[] = {
 	{"init", ul_init},
 	{"run", ul_run},
 	{"timer", ul_timer},
@@ -623,7 +643,7 @@ int luaopen_uloop(lua_State *L)
 	lua_createtable(L, 1, 0);
 	lua_setglobal(L, "__uloop_fds");
 
-	luaL_openlib(L, "uloop", uloop_func, 0);
+	luaL_setfuncs(L, uloop_func, 0);
 	lua_pushstring(L, "_VERSION");
 	lua_pushstring(L, "1.0");
 	lua_rawset(L, -3);

From f02abadcdad7a5d8a93e2f8abe3cecc5d0ca9c93 Mon Sep 17 00:00:00 2001
From: Rosen Penev <rosenp@gmail.com>
Date: Thu, 3 Feb 2022 14:42:26 -0800
Subject: [PATCH] remove C++ json lib

Not only is it unneeded, it doesn't even compile without a C++ compiler.

Signed-off-by: Rosen Penev <rosenp@gmail.com>
---
 CMakeLists.txt | 7 ++-----
 blobmsg_json.c | 6 +-----
 jshn.c         | 7 +------
 3 files changed, 4 insertions(+), 16 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index b0fca61..f40eaa6 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -15,11 +15,8 @@ OPTION(BUILD_LUA "build Lua plugin" ON)
 OPTION(BUILD_EXAMPLES "build examples" ON)
 
 INCLUDE(FindPkgConfig)
-PKG_SEARCH_MODULE(JSONC json-c)
-IF(JSONC_FOUND)
-  ADD_DEFINITIONS(-DJSONC)
-  INCLUDE_DIRECTORIES(${JSONC_INCLUDE_DIRS})
-ENDIF()
+PKG_SEARCH_MODULE(JSONC json-c REQUIRED)
+INCLUDE_DIRECTORIES(${JSONC_INCLUDE_DIRS})
 
 SET(SOURCES avl.c avl-cmp.c blob.c blobmsg.c uloop.c usock.c ustream.c ustream-fd.c vlist.c utils.c safe_list.c runqueue.c md5.c kvlist.c ulog.c base64.c udebug.c udebug-remote.c)
 
diff --git a/blobmsg_json.c b/blobmsg_json.c
index ec8b482..31eec09 100644
--- a/blobmsg_json.c
+++ b/blobmsg_json.c
@@ -17,11 +17,7 @@
 #include "blobmsg.h"
 #include "blobmsg_json.h"
 
-#ifdef JSONC
-	#include <json.h>
-#else
-	#include <json/json.h>
-#endif
+#include <json.h>
 
 bool blobmsg_add_object(struct blob_buf *b, json_object *obj)
 {
diff --git a/jshn.c b/jshn.c
index 1b685e5..9887bfe 100644
--- a/jshn.c
+++ b/jshn.c
@@ -13,12 +13,7 @@
  * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
  * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
  */
-#ifdef JSONC
-        #include <json.h>
-#else
-        #include <json/json.h>
-#endif
-
+#include <json.h>
 #include <string.h>
 #include <stdlib.h>
 #include <stdio.h>

From 109b6f3528bd0f34e18e6a8749c9cd589b148289 Mon Sep 17 00:00:00 2001
From: Philip Prindeville <philipp@redfish-solutions.com>
Date: Fri, 15 Sep 2023 13:53:02 -0600
Subject: [PATCH] jshn.sh: Minor cleanup

Signed-off-by: Philip Prindeville <philipp@redfish-solutions.com>
---
 sh/jshn.sh | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/sh/jshn.sh b/sh/jshn.sh
index 3657642..c10ff3f 100644
--- a/sh/jshn.sh
+++ b/sh/jshn.sh
@@ -222,6 +222,7 @@ json_dump() {
 }
 
 json_get_type() {
+	# target=$2
 	local __dest="$1"
 	local __cur
 
@@ -291,11 +292,11 @@ json_select() {
 	local type
 	local cur
 
-	[ -z "$1" ] && {
+	[ -z "$target" ] && {
 		_json_set_var JSON_CUR "J_V"
 		return 0
 	}
-	[[ "$1" == ".." ]] && {
+	[[ "$target" == ".." ]] && {
 		_json_get_var cur JSON_CUR
 		_json_get_var cur "U_$cur"
 		_json_set_var JSON_CUR "$cur"
@@ -316,6 +317,8 @@ json_select() {
 }
 
 json_is_a() {
+	# target=$1
+	# type=$2
 	local type
 
 	json_get_type type "$1"

From 5068553db91f2a49f34f7b66b9d2e55ecf5a1070 Mon Sep 17 00:00:00 2001
From: Philip Prindeville <philipp@redfish-solutions.com>
Date: Fri, 15 Sep 2023 12:35:31 -0600
Subject: [PATCH] jshn.sh: Add anonymous strings in arrays

---
 sh/jshn.sh | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/sh/jshn.sh b/sh/jshn.sh
index c10ff3f..d961926 100644
--- a/sh/jshn.sh
+++ b/sh/jshn.sh
@@ -150,6 +150,17 @@ json_add_string() {
 	_json_add_generic string "$1" "$2" "$cur"
 }
 
+json_push_string() {
+	local cur
+	_json_get_var cur JSON_CUR
+	[ "${cur%%[0-9]*}" = "J_A" ] || {
+		[ -n "$_json_no_warning" ] || \
+			echo "WARNING: Not in an array" >&2
+		return 1
+	}
+	_json_add_generic string "" "$2" "$cur"
+}
+
 json_add_int() {
 	local cur
 	_json_get_var cur JSON_CUR

From 115aaedfa34d23206349b8d2d708b0505bf6a9c2 Mon Sep 17 00:00:00 2001
From: Felix Fietkau <nbd@nbd.name>
Date: Fri, 15 Sep 2023 16:00:00 -0600
Subject: [PATCH] jshn.sh: Drop extraneous space when appending values to
 variable

fixes: issue #15

Signed-off-by: Felix Fietkau <nbd@nbd.name>
Signed-off-by: Philip Prindeville <philipp@redfish-solutions.com>
---
 sh/jshn.sh | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/sh/jshn.sh b/sh/jshn.sh
index 1d30557..66ca952 100644
--- a/sh/jshn.sh
+++ b/sh/jshn.sh
@@ -23,7 +23,7 @@ __jshn_raw_append() {
 _jshn_append() {
 	# var=$1
 	local _a_value="$2"
-	eval "${JSON_PREFIX}$1=\"\${${JSON_PREFIX}$1} \$_a_value\""
+	eval "${JSON_PREFIX}$1=\"\${${JSON_PREFIX}$1}\${${JSON_PREFIX}$1:+ }\$_a_value\""
 }
 
 _get_var() { 
